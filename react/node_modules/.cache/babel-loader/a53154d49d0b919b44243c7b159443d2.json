{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\DeniSouza\\\\Desktop\\\\Pasta do Deninhos\\\\projeto_patricia\\\\projeto_patricia\\\\react\\\\src\\\\components\\\\Carometro\\\\Carometro.js\",\n    _s = $RefreshSig$();\n\nimport React, { useEffect, useState } from 'react';\nimport axios from 'axios';\nimport Main from \"../template/Main\";\nimport Cards from \"./Card\";\nimport \"./Carometro.css\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nexport default function Carometro() {\n  _s();\n\n  var _cursos$find;\n\n  const title = \"Carômetro\";\n  const [cursos, setCursos] = useState([]);\n  const [alunos, setAlunos] = useState([]);\n  const [inputCurso, setInputCurso] = useState([]);\n  const urlCurso = \"http://localhost:5120/api/curso\";\n  const urlAluno = \"http://localhost:5120/api/aluno\";\n  const urlImg = \"http://xsgames.co/randomusers/assets/avatars/pixel/\";\n  useEffect(() => {\n    axios(urlAluno).then(reponse => {\n      setAlunos(reponse.data.map(aluno => ({\n        id: aluno.id,\n        ra: aluno.ra,\n        nome: aluno.nome,\n        codCurso: aluno.codCurso\n      })));\n    });\n  }, []);\n  useEffect(() => {\n    axios(urlCurso).then(reponse => {\n      setCursos(reponse.data.map(curso => ({\n        id: curso.id,\n        codCurso: curso.codCurso,\n        nomeCurso: curso.nomeCurso,\n        periodo: curso.periodo\n      })));\n    });\n  }, []);\n\n  const atualizaCurso = codCurso => {\n    const curso = cursos.find(curso => String(curso.codCurso) === codCurso);\n    setInputCurso(curso);\n  };\n\n  const selecionaAlunos = alunos => {\n    if (inputCurso) {\n      return alunos.filter(aluno => aluno.codCurso === inputCurso.codCurso);\n    }\n\n    return alunos;\n  };\n\n  return /*#__PURE__*/_jsxDEV(Main, {\n    title: title,\n    children: /*#__PURE__*/_jsxDEV(\"div\", {\n      children: [/*#__PURE__*/_jsxDEV(\"div\", {\n        children: [/*#__PURE__*/_jsxDEV(\"select\", {\n          className: \"select\",\n          onChange: event => atualizaCurso(event.target.value),\n          value: inputCurso ? (_cursos$find = cursos.find(curso => curso.nomeCurso === inputCurso.nomeCurso)) === null || _cursos$find === void 0 ? void 0 : _cursos$find.codCurso : \"\",\n          children: [/*#__PURE__*/_jsxDEV(\"option\", {\n            value: \"\",\n            children: \"Todos\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 73,\n            columnNumber: 25\n          }, this), cursos.map(curso => /*#__PURE__*/_jsxDEV(\"option\", {\n            value: curso.codCurso,\n            children: curso.nomeCurso\n          }, curso.codCurso, false, {\n            fileName: _jsxFileName,\n            lineNumber: 77,\n            columnNumber: 29\n          }, this))]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 63,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(\"p\", {}, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 82,\n          columnNumber: 21\n        }, this), \" \"]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 62,\n        columnNumber: 17\n      }, this), selecionaAlunos(alunos).map((aluno, index) => /*#__PURE__*/_jsxDEV(Cards, {\n        codCurso: aluno.codCurso,\n        nome: aluno.nome,\n        ra: aluno.ra,\n        img: `${urlImg}${index}.jpg`\n      }, aluno.ra, false, {\n        fileName: _jsxFileName,\n        lineNumber: 85,\n        columnNumber: 21\n      }, this))]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 61,\n      columnNumber: 13\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 60,\n    columnNumber: 9\n  }, this);\n}\n\n_s(Carometro, \"x0BoALgMpiMPu2Uma/3igCBa67k=\");\n\n_c = Carometro;\n\nvar _c;\n\n$RefreshReg$(_c, \"Carometro\");","map":{"version":3,"names":["React","useEffect","useState","axios","Main","Cards","Carometro","title","cursos","setCursos","alunos","setAlunos","inputCurso","setInputCurso","urlCurso","urlAluno","urlImg","then","reponse","data","map","aluno","id","ra","nome","codCurso","curso","nomeCurso","periodo","atualizaCurso","find","String","selecionaAlunos","filter","event","target","value","index"],"sources":["C:/Users/DeniSouza/Desktop/Pasta do Deninhos/projeto_patricia/projeto_patricia/react/src/components/Carometro/Carometro.js"],"sourcesContent":["import React, { useEffect, useState } from 'react';\r\nimport axios from 'axios';\r\nimport Main from \"../template/Main\";\r\nimport Cards from \"./Card\";\r\nimport \"./Carometro.css\";\r\n\r\nexport default function Carometro() {\r\n\r\n\r\n    const title = \"Carômetro\";\r\n    const [cursos, setCursos] = useState([]);\r\n    const [alunos, setAlunos] = useState([]);\r\n    const [inputCurso, setInputCurso] = useState([]);\r\n\r\n    const urlCurso = \"http://localhost:5120/api/curso\";\r\n    const urlAluno = \"http://localhost:5120/api/aluno\";\r\n    const urlImg =   \"http://xsgames.co/randomusers/assets/avatars/pixel/\"\r\n\r\n    useEffect(() => {\r\n        axios(urlAluno).then((reponse) => {\r\n            setAlunos(\r\n                reponse.data.map((aluno) => ({\r\n                    id: aluno.id,\r\n                    ra: aluno.ra,\r\n                    nome: aluno.nome,\r\n                    codCurso: aluno.codCurso,\r\n                }))\r\n            );\r\n        });\r\n    }, []);\r\n\r\n    useEffect(() => {\r\n        axios(urlCurso).then((reponse) => {\r\n            setCursos(\r\n                reponse.data.map((curso) => ({\r\n                    id: curso.id,\r\n                    codCurso: curso.codCurso,\r\n                    nomeCurso: curso.nomeCurso,\r\n                    periodo: curso.periodo,\r\n                }))\r\n            );\r\n        });\r\n    }, []);\r\n\r\n    const atualizaCurso = (codCurso) => {\r\n        const curso = cursos.find((curso) => String(curso.codCurso) === codCurso);\r\n\r\n        setInputCurso(curso);\r\n    };\r\n\r\n    const selecionaAlunos = (alunos) => {\r\n        if (inputCurso) {\r\n            return alunos.filter((aluno) => aluno.codCurso === inputCurso.codCurso);\r\n        }\r\n\r\n        return alunos;\r\n    };\r\n\r\n    return (\r\n        <Main title={title}>\r\n            <div>\r\n                <div>\r\n                    <select\r\n                        className=\"select\"\r\n                        onChange={(event) => atualizaCurso(event.target.value)}\r\n                        value={\r\n                            inputCurso\r\n                                ? cursos.find(\r\n                                    (curso) => curso.nomeCurso === inputCurso.nomeCurso\r\n                                )?.codCurso : \"\"\r\n                        }\r\n                    >\r\n                        <option value=\"\">\r\n                            Todos\r\n                        </option>\r\n                        {cursos.map((curso) => (\r\n                            <option value={curso.codCurso} key={curso.codCurso}>\r\n                                {curso.nomeCurso}\r\n                            </option>\r\n                        ))}\r\n                    </select>\r\n                    <p></p> {/* Coloquei essa tag p para separar o card do botão de selecionar*/}\r\n                </div>\r\n                {selecionaAlunos(alunos).map((aluno, index) => (\r\n                    <Cards\r\n                        codCurso={aluno.codCurso}\r\n                        nome={aluno.nome}\r\n                        ra={aluno.ra}\r\n                        key={aluno.ra}\r\n                        img={`${urlImg}${index}.jpg`}\r\n                    />\r\n                ))}\r\n            </div>\r\n            \r\n        </Main>\r\n        \r\n    );\r\n}"],"mappings":"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"},"metadata":{},"sourceType":"module"}